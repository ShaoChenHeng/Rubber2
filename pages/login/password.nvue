<template>
	<view class="page">
		<input @input="phone_input" v-model="phone" class="account" placeholder="请输入手机号" color="#FFFFFF"/>
		<input @input="password_input" v-model="password"  class="password" placeholder="请输入密码" color="#FFFFFF"/>
		<view class="line"></view>
		<button v-if="from == 'login'" @tap="login" size="mini" type="warn" class="login-button">登录</button>
	</view>
</template>

<script>
	import $repeater from '../../utils/repeater.js';
	export default {
		data() {
			return {
				password: '',
				phone: '',
				from: '',
			}
		},
		onLoad(options) {
			this.phone = options.phone || '';
			this.from = options.from || 'login';
		},
		methods: {
			phone_input(event) {
				this.phone = event.detail.value;
			},
			password_input(event) {
				this.password = event.detail.value;
			},
			
			init() {
				this.password = '';
			},
		
			login() {
				if (!this.phone || !this.password) {
					$repeater.helper.toast('none', '手机号或密码不能为空', 3000, false, 'bottom');
					return;
				}
				
				let phone = this.phone.trim();
				let password = this.password.trim();
				$repeater.user.login(phone, password, (res)=> {
					if (res){
						let uid = res.profile.userId;
						this.$store.commit('login', uid);
						
						console.log($repeater.storage.is_login());
						
						$repeater.helper.toast('none', '登录成功', 3000, false, 'bottom');
						this.check_login();
						setTimeout(()=>{
							uni.redirectTo({
								url: '../index/index',
							});
						}, 3000);
						
					} else {
						$repeater.helper.toast('none', '登录失败,请重试', 3000, false, 'bottom');
					}
					
				});
			},
			check_login() {				
				$repeater.user.check_login((user_status)=> {
					if (user_status && $repeater.storage.is_login()) { // 已登录
						let uid = user_status.profile.userId;
						this.$store.commit('set_uid', uid);
						this.init_user();
					}
				});
			},
			init_user() {
				let uid = this.$store.state.uid;
				$repeater.user.get_user_detail(uid, (user_info)=> {
					this.$store.commit('set_user_info', user_info)
				});
				$repeater.user.get_subcount((data)=> {
					this.$store.commit('set_subcount', data);
				});
				$repeater.user.get_likelist(uid, (data)=> {
					this.$store.commit('set_likelist', data.ids);
				});
			},
			
	
		}
	}
</script>

<style>
	.page {
		flex: 1;
		padding: 50rpx 30rpx;
		background-color: #121212;
	}

	.input {
		height: 80rpx;
		margin-top: 50rpx;
		font-size: 28rpx;
		background-color: #121212;
	}

	.login-button {
		margin-top: 80rpx;
		width: 690rpx;
		border-radius: 20rpx;
		background-color: #e63e43;
		border-color: #e63e43;
		height: 70rpx;
	}

	.account{
		margin-top: 80rpx;
		width: 690rpx;
		height: 100rpx;
		background-color: rgba(83, 83, 83, 1);
		border-radius: 15rpx;
	}
	
	.password{
		margin-top: 80rpx;
		width: 690rpx;
		height: 100rpx;
		background-color: rgba(83, 83, 83, 1);
		border-radius: 15rpx;
	}
</style>
