<template>
	<view class="page">
		<uni-transition :duration="300" :mode-class="mode_class" :styles="transfrom_class" :show="show_lyric">
			<list v-if="!nolyric" class="lyric-list" show-scrollbar="false">
				<cell class="top-area"></cell>
				<cell @tap="change_container()" v-for="(row, index) in lyric" :key="index">
					<view v-if="row.content" class="lyric-row">
						<text :ref="`lyric${index}`" :class="active_lyric_row_index == row.index ? 'light-text' : ''"
							class="lyric-row-text">{{row.content}}</text>
					</view>
				</cell>
			</list>
			<view v-else style="flex: 1;justify-content: center;" @tap="change_container()">
				<text class="lyric-row-text">纯音乐, 请欣赏</text>
			</view>
		</uni-transition>

		<uni-transition :duration="300" :mode-class="mode_class" :styles="transfrom_class" :show="!show_lyric">

			<view class="container">
				<view class="cover">
					<image ref="cover_image" class="cover-image" resize="cover"
						:src="'https://i.ebayimg.com/images/g/A7QAAOSwIEFgRecV/s-l1600.jpg' + '?param=400y400'"
						@tap="change_container()"></image>
					<view class="song-details">
						<text class="song-title"> 安静 </text>
						<text class="song-singer"> 周杰伦 </text>
					</view>
				</view>
			</view>
		</uni-transition>

		<view class="top-bar">
			<view class="status_bar">
				<!-- 这里是状态栏 -->
			</view>
			<view class="top-bar-wrapper">
				<view class="top-bar-option">
					<view class="icon-area back" @tap="turn()">
						<wyy-icon type="&#xe699;" size="50" color="#FFFFFF"></wyy-icon>
					</view>
					<text class="title-text"> hello </text>
					<view class="icon-area details" @tap="next()">
						<wyy-icon type="&#xe655;" size="50" color="#FFFFFF"></wyy-icon>
					</view>
					
				</view>
			</view>
		</view>

		<view class="footer">
			<view class="slider-view">
				<slider @change="slider_change" @changing="slider_changing" class="slider" :min="0" :max="duration"
					:value="current_position" activeColor="rgba(255,255,255,.7)" backgroundColor="rgba(255,255,255,.4)"
					block-color="#FFFFFF" block-size="15" />
			</view>

			<view class="slider-view-bottom">
				<view class="current_time">
					<text class="time-text">{{position_show}}</text>
				</view>

				<view class="end_time">
					<text class="time-text grey-time-text">{{duration_show}}</text>
				</view>
			</view>


			<view class="handle-area">
				<view class="icon-group">
					<view class="icon-area loop" @tap="change_play_mode">
						<wyy-icon v-if="play_mode == 'random'" type="&#xe676;" size="50" color="#FFFFFF"></wyy-icon>
						<wyy-icon v-if="play_mode == 'sequence'" type="&#xe674;" size="50" color="#FFFFFF"></wyy-icon>
						<wyy-icon v-if="play_mode == 'single'" type="&#xe678;" size="50" color="#FFFFFF"></wyy-icon>
					</view>
					<view class="icon-area prev" @tap="prev()">
						<wyy-icon type="&#xe66f;" size="50" color="#FFFFFF"></wyy-icon>
					</view>

					<view class="icon-area-circle turn" @tap="turn()">
						<wyy-icon :type="playing ? '&#xe672;' : '&#xe673;'" size="140" color="#FFFFFF"></wyy-icon>
					</view>
					<view class="icon-area next" @tap="next()">
						<wyy-icon type="&#xe66f;" size="50" color="#FFFFFF"></wyy-icon>
					</view>
					<view class="icon-area" @tap="like($event)">
						<wyy-icon :type="islike ? '&#xe720;' : '&#xe607;'" size="50"
							:color="islike ? '#FF0000' : '#FFFFFF'"></wyy-icon>
					</view>
				</view>
			</view>

			<view class="handle-area-2">
				<view class="bottom-icon-group">
					<view class="icon-area share" @tap="next()">
						<wyy-icon type="&#xe667;" size="30" color="#FFFFFF"></wyy-icon>
					</view>
					<view class="icon-area detail" @tap="next()">
						<wyy-icon type="&#xe6c6;" size="30" color="#FFFFFF"></wyy-icon>
					</view>

				</view>
			</view>
		</view>

	</view>
</template>

<script>
	import uniTransition from '@/components/uni-transition/uni-transition.vue'
	import wyyIcon from '../../components/wyy-icon/wyy-icon.nvue';
	import $repeater from '@/utils/repeater.js';

	const animation = weex.requireModule('animation');
	const dom = weex.requireModule('dom')

	export default {
		components: {
			uniTransition,
			wyyIcon
		},
		data() {
			return {
				statusbar_height: '',
				duration: '', //音频总长度单位s
				current_position: '', //当前播放位置

				timer: '', //计时器
				picurl: '',
				animation_timer: '',
				deg: 0,
				dragging: false, //
				show_lyric: false, //是否显示歌词
				nolyric: true,
				lyric: [],
				active_lyric_row_index: 0,

				mode_class: ['fade'],
				transfrom_class: {
					'position': 'fixed',
					'bottom': '200rpx',
					'top': 0,
					'left': 0,
					'right': 0,
					'align-items': 'center'
				},

			};
		},
		computed: {
			position_show() {
				let minute = parseInt(this.current_position / 60);
				let second = this.current_position % 60;
				if (minute < 10) {
					minute = '0' + minute;
				}
				if (second < 10) {
					second = '0' + second;
				}
				return minute + ':' + second;
			},
			duration_show() {
				let minute = parseInt(this.duration / 60);
				let second = this.duration % 60;
				if (minute < 10) {
					minute = '0' + minute;
				}
				if (second < 10) {
					second = '0' + second;
				}
				return minute + ':' + second;
			},
			playing() {

			},
			played() {
				// return this.$store.state.played;
			},
			play_mode() {
				return 'single';
			}
		},
		watch: {
			played(value) {
				console.log(value);
				this._init();
			}
		},
		created() {

		},
		onReady() {
			this._init();
		},
		methods: {
			_init() {
				this.set_title('hello');
				this.get_lyric();

				this.init_timer();
				this.init_slider()
			},
			init_slider() {

			},

			change_play_mode() {
				let mode_list = ['single', 'sequence', 'random'];
				let current_mode = this.play_mode;
				let index = mode_list.indexOf(current_mode);
				let next_index = index + 1 > 2 ? 0 : index + 1;
				let next_mode = mode_list[next_index];
				// this.$store.commit('set_play_mode', next_mode);
			},

			set_active_lyric_row_index() {
				if (this.nolyric) {
					return;
				}
				var active_lyric_rows = this.lyric.filter((obj) => {
					return parseInt(obj.second) <= parseInt(this.current_position) && obj.content;
				});

				let current_row = active_lyric_rows.pop();

				if (this.active_lyric_row_index == current_row.index) { //在一行歌词停留时, 就不滚动了
					return;
				}


				this.active_lyric_row_index = current_row.index;

				let to_index = 0;
				if (active_lyric_rows.length > 8) {
					to_index = active_lyric_rows.slice(-8)[0].index;

					console.log(active_lyric_rows.slice(-8)[0]);
				}

				if (current_row.content && to_index > 0) {
					try {
						const el = this.$refs[`lyric${to_index}`][0];
						dom.scrollToElement(el, {})
					} catch (e) {
						console.log(e);
					}
				}

			},
			get_lyric() {
				return this.lyric[0];
			},
			change_container() {
				this.show_lyric = !this.show_lyric;
			},


			set_title(title) {
				uni.setNavigationBarTitle({
					title: title
				});
			},
			slider_changing(e) {
				this.dragging = true;
				this.current_position = e.detail.value;
			},
			slider_change(e) {
				console.log(e);
				let position = e.detail.value;
				$repeater.player.seek_to(position);
				this.dragging = false;
			},
			turn() {
				//切换播放暂停状态
				$repeater.player.turn();
			},
			stop_rotate() {

			},
			init_timer() {


			},
			next() {
				console.log('下一曲');
				this.getImage();
				// this.$refs.playlist_drawer.next_song();
			},
			prev() {
				console.log('上一曲');
				// this.$refs.playlist_drawer.prev_song();
			},
		
	},
}
	// atest color is background: #30A0FF;
</script>

<style>
	.page {
		flex: 1;
		background:#5d5d5d;
	}

	.background-pic {

		
		flex: 1;
	}

	.status_bar {
		height: 100rpx;
		width: 100%;
	}

	.top-bar {
		position: fixed;
		height: 200rpx;
		width: 750rpx;
		align-items: center;

	}

	.top-bar-wrapper {

		width: 750rpx;
		align-items: center;

	}

	.title-text {
		color: #FFFFFF;
		font-size: 40rpx;
	}

	.top-bar-option {
		width: 750rpx;
		height: 90rpx;

		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 0rpx 60rpx 10rpx 50rpx;
	}


	.container {
		top: 100;
		background: #30A0FF;
		height: 900rpx;
		width: 650rpx;
	}

	.cover {
		flex: 1;
		justify-content: center;
		align-items: center;
	}

	.song-details {
		margin-top: 90rpx;
		width: 650rpx;
		height: 100rpx;
		text-align: left;
	}

	.song-title {
		color: #FFFFFF;
		font-weight: bold;
		font-size: 40rpx;
	}

	.song-singer {
		color: rgba(255, 255, 255, .6);
		font-size: 39rpx;
	}

	.cover-image {
		width: 650rpx;
		height: 650rpx;
	}

	.footer {
		position: fixed;
		bottom: 0;
		left: 0;
		height: 400rpx;
		width: 750rpx;
		align-items: center;
	}

	.slider-view {
		width: 720rpx;
		height: 40rpx;
		flex-direction: row;

		justify-content: center;
		align-items: center;
	}

	.slider-view-bottom {
		width: 620rpx;
		height: 20rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.slider {
		width: 20rpx;
		margin-left: 35rpx;
	}

	.current_time {
		width: 55rpx;
		align-items: flex-end;
	}

	.end_time {
		width: 55rpx;
		

	}

	.time-text {
		color: #FFFFFF;
		font-size: 22rpx;
	}

	.grey-time-text {
		font-size: 22rpx;
		color: rgba(255, 255, 255, .3);

	}

	.handle-area {
		width: 750rpx;
		align-items: center;
		padding: 0rpx 65rpx 30rpx 65rpx;
	}

	.handle-area-2 {
		width: 750rpx;
		align-items: flex-end;
	}

	.icon-group {
		width: 650rpx;
		height: 150rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.icon-area {
		width: 75rpx;
		height: 75rpx;
		justify-content: center;
		align-items: center;
	}

	.icon-area-circle {
		width: 145rpx;
		height: 145rpx;
		justify-content: center;
		align-items: center;
	}

	.lyric-row {
		width: 750rpx;
		height: 65rpx;
		padding-left: 16rpx;
		justify-content: center;
		align-items: center;
	}

	.lyric-row-text {
		font-size: 24rpx;
		color: #8B8682;
	}

	.light-text {
		color: #FFFFFF;
		font-size: 26rpx;
		font-weight: bold;
	}

	.lyric-list {
		flex: 1;
		background: #30A0FF;
		width: 750rpx;
	}

	.bottom-icon-group {
		
		flex-direction: row;
		margin-right: 45rpx;
	}

	.next {
		-moz-transform: scaleX(-1);
		-webkit-transform: scaleX(-1);
		-o-transform: scaleX(-1);
		transform: scaleX(-1);
	}
</style>
